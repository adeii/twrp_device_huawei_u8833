import /init.recovery.logd.rc
import /init.recovery.service.rc

on early-init
    # Apply strict SELinux checking of PROT_EXEC on mmap/mprotect calls.
    write /sys/fs/selinux/checkreqprot 0

    # Set the security context for the init process.
    # This should occur before anything else (e.g. ueventd) is started.
    setcon u:r:init:s0

    start ueventd
    start healthd

service set_permissive /sbin/toolbox setenforce 0
    oneshot
    seclabel u:r:recovery:s0

on init
    export PATH /sbin:/system/bin
    export LD_LIBRARY_PATH .:/sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc
    mkdir /misc
    mkdir /boot
    mkdir /recovery
    mkdir /cache
    mkdir /cust
    mkdir /system
    mkdir /data
    mkdir /internal_sd
    mkdir /sdcard
    mkdir /sideload
    mount tmpfs tmpfs /tmp

    chown root shell /tmp
    chmod 0775 /tmp

# Always start adbd on userdebug and eng builds
write /sys/class/android_usb/android0/enable 0
write /sys/class/android_usb/android0/idVendor 12d1
write /sys/class/android_usb/android0/idProduct 1038
write /sys/class/android_usb/android0/f_mass_storage/cdrom_index none
write /sys/class/android_usb/android0/f_mass_storage/nluns 2
write /sys/class/android_usb/android0/functions mass_storage,adb

on boot
    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

on property:sys.powerctl=*
   powerctl ${sys.powerctl}

service ueventd /sbin/ueventd
    critical
    seclabel u:r:ueventd:s0

service rmt_storage /sbin/rmt_storage_recovery
    user root

service rmt_oeminfo /sbin/rmt_oeminfo_recovery
    oneshot

service recovery /sbin/sh /sbin/charge.sh
    oneshot

service charge /sbin/charge_recovery
    oneshot

service adbd /sbin/adbd --root_seclabel=u:r:su:s0 --device_banner=recovery
    disabled
    socket adbd stream 660 system system
    seclabel u:r:adbd:s0

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop service.adb.root 1

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
